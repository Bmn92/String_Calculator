c
str_numbers.include?("//")
str_numbers.any?("//,")
str_numbers.include?("//,")
str_numbers
delimiter
c
str_numbers
n
str_numbers
n
delimiter
n
c
str_numbers
n
str_numbers
n
delimiter
n
c
str_numbers.include?(["\n", "//\n"])
str_numbers
c
str_numbers.include?(["\n", "//\n"])
str_numbers = str_numbers.gsub("\n", ",") if str_numbers.include?(["\n", "//\n"])
str_numbers
c
n
delimiter
str_numbers
c
str_numbers
n
delimiter
str_numbers
n
c
str_numbers
n
delimiter
n
c
str_numbers.gsub("/^.*?\n/", ",") if str_numbers.include?("\n")
str_numbers.gsub("/^.*?\n/", ",")
str_numbers.gsub("\n", ",") if str_numbers.include?("\n")
str_numbers.gsub("\n", ",")
n
str_numbers.start_with?("//")
str_numbers
c
str_numbers
c
str_numbers
c
str_numbers
c
str_numbers
c
str_numbers
n
delimiter
n
c
str_numbers.include?("\n")
str_numbers.include?('\n')
str_numbers
n
str_numbers = str_numbers.gsub("\n", ",") if str_numbers.include?('\n')
delimiter
n
c
str_numbers
str_numbers.split(delimiter)
n
c
data
n
c
data.add("1\n2,3")
data
n
c
str_numbers
n
delimiter
n
str_numbers
c
str_numbers
c
str_numbers
c
str_numbers
